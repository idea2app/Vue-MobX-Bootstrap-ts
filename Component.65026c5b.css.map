{"mappings":"A,sCEaE,kKAWE,8G,8KCMF,6IASA,qGAQA,+CAGA,oEAKA,qCAGE,6C,iECiBA","sources":["Component.65026c5b.css","ff2eadfdccee4e38","src/components/Overlay.vue","src/components/ImageUploader.vue","src/views/Component.vue"],"sourcesContent":[".box[data-v-c73599] {\n  position: relative;\n}\n\n.box.show[data-v-c73599]:after {\n  content: \"\";\n  opacity: .85;\n  backdrop-filter: blur(2px);\n  position: absolute;\n  inset: 0;\n}\n\n.box.show .spinner[data-v-c73599] {\n  z-index: 1;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.box[data-v-22aa2c] {\n  border: 2px dashed var(--primary);\n  border-radius: .5rem;\n  justify-content: center;\n  align-items: center;\n  height: 20vw;\n  display: flex;\n  position: relative;\n  overflow: hidden;\n}\n\n.box[data-v-22aa2c]:before {\n  content: \"+\";\n  color: var(--primary);\n  font-size: 5rem;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.box input[type=\"file\"][data-v-22aa2c] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.box .image[data-v-22aa2c] {\n  transition: all .25s;\n}\n\n.box .rotate[data-v-22aa2c] {\n  position: absolute;\n  top: .5rem;\n  right: .5rem;\n}\n\n.box.show[data-v-22aa2c] {\n  border: none;\n}\n\n.box.show[data-v-22aa2c]:before {\n  content: none;\n}\n\n.table-center th .p-column-header-content {\n  justify-content: center;\n}\n\n.table-center th, .table-center td {\n  text-align: center;\n}\n/*# sourceMappingURL=Component.65026c5b.css.map */\n","@import \"66b9eb306e3c771f\";\n@import \"f0b9ceee2216e3d7\";\n@import \"bd5e32c12c131107\";\n","<template>\n  <div class=\"box\" :class=\"{ 'bg-light rounded-sm': show, show }\">\n    <slot></slot>\n\n    <div class=\"spinner\" v-if=\"show\">\n      <ProgressSpinner />\n    </div>\n  </div>\n</template>\n\n<style lang=\"less\" scoped>\n.box {\n  position: relative;\n  &.show {\n    &::after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      inset: 0;\n      opacity: 0.85;\n      backdrop-filter: blur(2px);\n    }\n    .spinner {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      z-index: 1;\n      transform: translate(-50%, -50%);\n    }\n  }\n}\n</style>\n\n<script lang=\"ts\" setup>\nimport ProgressSpinner from 'primevue/progressspinner';\n\ndefineProps<{ show?: boolean }>();\n</script>\n","<template>\n  <Overlay :class=\"{ box: true, show: URI }\" color=\"primary\" :show=\"loading\">\n    <img\n      v-if=\"URI\"\n      class=\"image max-w-full max-h-full\"\n      :style=\"{ transform: `rotate(${angle}deg)` }\"\n      :src=\"URI\"\n    />\n    <input\n      type=\"file\"\n      :name=\"name\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :accept=\"accept || 'image/*'\"\n      @change=\"preview\"\n    />\n    <i v-if=\"URI\" class=\"pi pi-refresh rotate\" @click=\"rotate\" />\n  </Overlay>\n</template>\n\n<style lang=\"less\" scoped>\n.box {\n  height: 20vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.5rem;\n  border: 2px dashed var(--primary);\n  position: relative;\n  overflow: hidden;\n  &::before {\n    content: '+';\n    font-size: 5rem;\n    color: var(--primary);\n\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n  input[type='file'] {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n  }\n  .image {\n    transition: 0.25s;\n  }\n  .rotate {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n  }\n  &.show {\n    border: none;\n    &::before {\n      content: none;\n    }\n  }\n}\n</style>\n\n<script lang=\"ts\" setup>\nimport Overlay from './Overlay.vue';\n</script>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: ['name', 'required', 'disabled', 'accept', 'value', 'upload'],\n  data: () => ({\n    URI: '',\n    angle: 0,\n    loading: false\n  }),\n  watch: {\n    value(this: any, path: string) {\n      this['URI'] = path;\n    }\n  },\n  methods: {\n    async preview(this: any, event: Event) {\n      const { name, files } = event.target as HTMLInputElement;\n\n      if (!files?.[0]) return;\n\n      const old = this['URI'];\n\n      if (old) URL.revokeObjectURL(old);\n      this['URI'] = URL.createObjectURL(files[0]);\n\n      if (this.upload instanceof Function) {\n        this.loading = true;\n        await this.upload(name, files[0]);\n        this.loading = false;\n      }\n    },\n    rotate(this: any) {\n      this['angle'] += 90;\n    }\n  }\n});\n</script>\n","<template>\n  <div class=\"text-left\">\n    <h2>Stock Number</h2>\n    <StockNumber :extent=\"0.3\" :value=\"0.3\">\n      <span slot=\"after\">%</span>\n    </StockNumber>\n    <StockNumber :extent=\"-0.5\" :value=\"0.5\">\n      <span slot=\"after\">%</span>\n    </StockNumber>\n\n    <h2 class=\"mt-4\">Panel</h2>\n    <Panel toggleable header=\"Panel\">Content</Panel>\n\n    <h2 class=\"mt-4\">Stepper</h2>\n\n    <Stepper orientation=\"vertical\">\n      <StepperPanel header=\"first\"></StepperPanel>\n      <StepperPanel header=\"second\"></StepperPanel>\n    </Stepper>\n\n    <h2 class=\"mt-4\">Table</h2>\n    <DataTable\n      class=\"table-center\"\n      stripedRows\n      :value=\"[\n        { A: 1, B: 2 },\n        { A: 3, B: 4 },\n        { A: 5, B: 6 }\n      ]\"\n    >\n      <Column field=\"A\" header=\"A\" />\n      <Column field=\"B\" header=\"B\" />\n    </DataTable>\n\n    <h2 class=\"mt-4\">Tree</h2>\n    <Tree class=\"text-start\" :value=\"tree\" />\n\n    <h2 class=\"mt-4\">Date Range</h2>\n    <Calendar selectionMode=\"range\" v-model=\"date\" />\n\n    <h2 class=\"mt-4\">Image</h2>\n    <Image src=\"https://github.com/idea2app.png\" />\n\n    <h2 class=\"mt-4\">Image Uploader</h2>\n    <ImageUploader class=\"mb-4\" />\n\n    <h2 class=\"mt-4\">Downloader</h2>\n    <Button @click=\"download\">download</Button>\n    <Downloader class=\"mt-4\" />\n\n    <h2 class=\"mt-4\">Dialog</h2>\n    <Button severity=\"primary\" @click=\"openDialog = true\">Open Dialog</Button>\n\n    <Dialog modal header=\"form\" :visible=\"openDialog\">\n      <form @submit.prevent=\"closeDialog\" @reset=\"closeDialog\">\n        <FloatLabel class=\"my-3\">\n          <InputText id=\"example-input\" name=\"test\" required />\n          <label for=\"example-input\">input</label>\n        </FloatLabel>\n        <div class=\"flex justify-content-around\">\n          <Button type=\"submit\">submit</Button>\n          <Button type=\"reset\" severity=\"danger\">close</Button>\n        </div>\n      </form>\n    </Dialog>\n\n    <h2 class=\"mt-4\">Confirm</h2>\n    <Button severity=\"primary\" @click=\"openConfirm()\">Open Confirm</Button>\n    <ConfirmDialog />\n  </div>\n</template>\n\n<style lang=\"less\">\n.table-center {\n  th .p-column-header-content {\n    justify-content: center;\n  }\n  th,\n  td {\n    text-align: center;\n  }\n}\n</style>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue';\n\nimport Button from 'primevue/button';\nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\nimport Panel from 'primevue/panel';\nimport Stepper from 'primevue/stepper';\nimport StepperPanel from 'primevue/stepperpanel';\nimport Tree from 'primevue/tree';\nimport Calendar from 'primevue/calendar';\nimport FloatLabel from 'primevue/floatlabel';\nimport InputText from 'primevue/inputtext';\nimport Dialog from 'primevue/dialog';\nimport { useConfirm } from 'primevue/useconfirm';\nimport ConfirmDialog from 'primevue/confirmdialog';\n\nimport StockNumber from '../components/StockNumber.vue';\nimport Image from '../components/Image.vue';\nimport ImageUploader from '../components/ImageUploader.vue';\nimport Downloader from '../components/Downloader.vue';\n\nimport { downloader } from '../models/service';\n\nconst date = ref();\n\nconst tree = [\n  {\n    label: 'node 0',\n    children: [\n      { label: 'node 1.1' },\n      { label: 'node 1.2', children: [{ label: 'node 2.1' }] }\n    ]\n  }\n];\n\nfunction download() {\n  const task = downloader.createTask(\n    'https://ows.blob.core.chinacloudapi.cn/$web/file/001%E6%B1%9F%E6%B3%A2.png',\n    'test'\n  );\n  task.start({ chunkSize: 1024 ** 2 / 2 });\n}\n\nconst openDialog = ref(false);\n\nfunction closeDialog(data: any) {\n  openDialog.value = false;\n\n  console.log(data);\n}\n\nconst confirm = useConfirm();\n\nconst openConfirm = () =>\n  confirm.require({\n    header: 'Confirm',\n    message: 'Yes or No ?',\n    accept: console.info,\n    reject: console.error\n  });\n</script>\n"],"names":[],"version":3,"file":"Component.65026c5b.css.map"}